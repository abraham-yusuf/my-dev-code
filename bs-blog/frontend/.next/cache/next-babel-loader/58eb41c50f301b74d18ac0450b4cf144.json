{"ast":null,"code":"var _jsxFileName = \"/home/dev/dev/bs-blog/frontend/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport \"../assets/css/style.css\";\nimport { createContext } from \"react\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport { fetchAPI } from \"../lib/api\"; // Store Strapi Global object in context\n\nexport const GlobalContext = /*#__PURE__*/createContext({});\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    global\n  } = pageProps;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: getStrapiMedia(global.favicon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Staatliches\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/css/uikit.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.min.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/js/uikit-icons.min.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), __jsx(GlobalContext.Provider, {\n    value: global,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }))));\n}; // getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\n\n\nMyApp.getInitialProps = async ctx => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx); // Fetch global site settings from Strapi\n\n  const global = await fetchAPI(\"/global\"); // Pass the data to our page via props\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    pageProps: {\n      global\n    }\n  });\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/dev/dev/bs-blog/frontend/pages/_app.js"],"names":["App","Head","createContext","getStrapiMedia","fetchAPI","GlobalContext","MyApp","Component","pageProps","global","favicon","getInitialProps","ctx","appProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,yBAAP;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAC,EAAD,CAAnC;;AAEP,MAAMI,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,SAAnB;AAEA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,eAAV;AAA0B,IAAA,IAAI,EAAEL,cAAc,CAACM,MAAM,CAACC,OAAR,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,qDAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,iEAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE;AAAQ,IAAA,GAAG,EAAC,oEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAQ,IAAA,GAAG,EAAC,qEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAQ,IAAA,GAAG,EAAC,gEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,EAeE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAED,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAfF,CADF;AAqBD,CAxBD,C,CA0BA;AACA;AACA;AACA;;;AACAF,KAAK,CAACK,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACrC;AACA,QAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACW,eAAJ,CAAoBC,GAApB,CAAvB,CAFqC,CAGrC;;AACA,QAAMH,MAAM,GAAG,MAAML,QAAQ,CAAC,SAAD,CAA7B,CAJqC,CAKrC;;AACA,yCAAYS,QAAZ;AAAsBL,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAjC;AACD,CAPD;;AASA,eAAeH,KAAf","sourcesContent":["import App from \"next/app\";\nimport Head from \"next/head\";\nimport \"../assets/css/style.css\";\nimport { createContext } from \"react\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport { fetchAPI } from \"../lib/api\";\n\n// Store Strapi Global object in context\nexport const GlobalContext = createContext({});\n\nconst MyApp = ({ Component, pageProps }) => {\n  const { global } = pageProps;\n\n  return (\n    <>\n      <Head>\n        <link rel=\"shortcut icon\" href={getStrapiMedia(global.favicon)} />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Staatliches\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/css/uikit.min.css\"\n        />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.min.js\" />\n        <script src=\"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/js/uikit-icons.min.js\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.js\" />\n      </Head>\n      <GlobalContext.Provider value={global}>\n        <Component {...pageProps} />\n      </GlobalContext.Provider>\n    </>\n  );\n};\n\n// getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\nMyApp.getInitialProps = async (ctx) => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx);\n  // Fetch global site settings from Strapi\n  const global = await fetchAPI(\"/global\");\n  // Pass the data to our page via props\n  return { ...appProps, pageProps: { global } };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}